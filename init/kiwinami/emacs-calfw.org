#+PROPERTY: header-args    :results silent
#+STARTUP: content
* Emacs-calfw
  https://github.com/kiwanami/emacs-calfw
  This provides a fancy calendar, which can be used in conjunction with
  org-agendas, ics files and more. 

** Dummy function
Set this variable in =private/=. 
#+begin_src emacs-lisp
  (defun my/calendar-sources ()) ;; Set this in private
#+end_src

** Packages
#+BEGIN_SRC emacs-lisp
  (use-package "calfw" :defer t
    :ensure t
    :config
    ;; Calendar Views
    ;; Two week agenda.
    (defun my/two-week-view ()
      (interactive)
      (cfw:open-calendar-buffer
       :contents-sources
       ( my/calendar-sources )
       :view
       'two-weeks
       ))

    ;; Week agenda.
    (defun my/one-week-view ()
      (interactive)
      (cfw:open-calendar-buffer
       :contents-sources
       ( my/calendar-sources )
       :view
       'week
       ))

    (defun my/one-month-view ()
      (interactive)
      (cfw:open-calendar-buffer
       :contents-sources
       ( my/calendar-sources ) 
       :view
       'month
       ))


    :bind (("C-x c 1" . my/one-week-view)
	   ("C-x c 2" . my/two-week-view)
	   ("C-x c 3" . my/one-month-view)
	   )
    )

  (use-package "calfw-org" :defer t
    :ensure t
    :init
    (require 'calfw-org)
    (setq cfw:org-overwrite-default-keybinding t)) ;; Org-mode like keybindings

  (use-package "calfw-ical" :defer t
    :ensure t
    :init
    (require 'calfw-ical))

  (use-package "calfw-cal" :defer t
    :ensure t
    :init
    (require 'calfw-cal))
#+END_SRC

** Grid settings
  Fancy Grid settings; various examples.
  Set these in private.
#+BEGIN_SRC emacs-lisp
  ;; Default setting
  (defun cfw:set-grid-style (style) 
    (cond
     ((not style)
      (setq cfw:fchar-junction ?+
	    cfw:fchar-vertical-line ?|
	    cfw:fchar-horizontal-line ?-
	    cfw:fchar-left-junction ?+
	    cfw:fchar-right-junction ?+
	    cfw:fchar-top-junction ?+
	    cfw:fchar-top-left-corner ?+
	    cfw:fchar-top-right-corner ?+ ))

     ;; Unicode characters
     ((= style 1)
      (setq cfw:fchar-junction ?╋
	    cfw:fchar-vertical-line ?┃
	    cfw:fchar-horizontal-line ?━
	    cfw:fchar-left-junction ?┣
	    cfw:fchar-right-junction ?┫
	    cfw:fchar-top-junction ?┯
	    cfw:fchar-top-left-corner ?┏
	    cfw:fchar-top-right-corner ?┓))

     ;; Another unicode chars
     ((= style 2)
      (setq cfw:fchar-junction ?╬
	    cfw:fchar-vertical-line ?║
	    cfw:fchar-horizontal-line ?═
	    cfw:fchar-left-junction ?╠
	    cfw:fchar-right-junction ?╣
	    cfw:fchar-top-junction ?╦
	    cfw:fchar-top-left-corner ?╔
	    cfw:fchar-top-right-corner ?╗))
     ))
#+END_SRC
