#+AUTHOR: Roger J. H. Welsh
#+EMAIL: rjhwelsh@gmail.com
#+PROPERTY: header-args    :results silent
#+STARTUP: content

* Files
** Finding and opening files
 Use =M-x= to run a command in Emacs.
     - find-file :: Opens up a file buffer ( =C-x C-f= )

** Backup
https://stackoverflow.com/questions/151945/how-do-i-control-how-emacs-makes-backup-files
https://anirudhsasikumar.net/blog/2005.01.21.html

*** Backup variables
  Backup cache locations.
  #+BEGIN_SRC emacs-lisp
    (setq
     my/emacs-backup-cache "~/.cache/emacs/save"
     my/emacs-backup-session "~/.cache/emacs/session"
     )
  #+END_SRC

*** Backup files =~=

**** Backup directory
#+begin_src emacs-lisp
  (setq 
   backup-directory-alist `((".*" . ,my/emacs-backup-cache )) ; don't litter the filetree ; only make backups of files in homedir
   )
#+end_src
**** Backup by  copying
#+begin_src emacs-lisp
  (setq
   backup-by-copying t 
   make-backup-files t 
   )
#+end_src
**** Keep versions of backups
#+BEGIN_SRC emacs-lisp
  (setq 
   version-control t
   kept-new-versions 6
   kept-old-versions 2
   delete-old-versions t
   )
#+END_SRC
*** Auto-save files =#=
    Auto-save files use hashmarks (#) and shall be written locally
    within the project directory (along with the actual files). 

    When the user saves the file, the auto-saved version is deleted. But
    when the user exits the file without saving it, Emacs or the X session
    crashes, the auto-saved files still exist.

    Auto-save is nowadays disabled by default because it can slow down
    editing when connected to a slow machine, and because many files
    contain sensitive data.
**** Auto save default
#+begin_src emacs-lisp
  (setq
   auto-save-default t
   )
#+end_src

**** Auto save periods
#+begin_src emacs-lisp
  (setq
   auto-save-timeout 20
   auto-save-interval 200
   )
#+end_src

**** Auto save file name transforms
 #+begin_src emacs-lisp
;; (setq
;;     auto-save-file-name-transforms `(( ".*" ,my/emacs-backup-cache t)) ;
;; )
 #+end_src


*** Security detail
  Unfortunately, previous configuration is also backing up and versioning files I
  would rather not have backed up and versioned; including decrypting encrypted
  files. Hopefully the following will circumvent this.

  #+BEGIN_SRC emacs-lisp
  (defvar backup-inhibit-file-name-regexp "\\(/dev/shm\\|.*\\.plstore\\)"
    "Files whose full path matches this regular expression will not be backed up.")
  (defun regexp-backup-enable-predicate (filename)
    "Disable backups for files whose name matches `backup-inhibit-file-name-regexp'.
  Also call `normal-backup-enable-predicate'."
    (save-match-data
      (and (not (string-match backup-inhibit-file-name-regexp filename))
       (normal-backup-enable-predicate filename))))
  (setq backup-enable-predicate 'regexp-backup-enable-predicate)
  #+END_SRC

