* Session state
*This is distinct from emacs session.el to provide a general location for ALL SESSION MANAGEMENT*
** Session state command line arguments
Capture command line arguments used. 
   #+begin_src emacs-lisp
(setq session-state-cli (apply 'concat command-line-args-left command-line-args))
   #+end_src
** Session state rjh config variables
Concatenate =EMACS_CUSTOM=, =EMACS_CONFIG=, =EMACS_CONFIG_PRIVATE= environment variables.
#+begin_src emacs-lisp
  (setq session-state-rjh-config-env 
	(apply 'concat 
	       (mapcar 'getenv 
		       '("EMACS_CUSTOM" 
			 "EMACS_CONFIG" 
			 "EMACS_CONFIG_PRIVATE"))))
#+end_src

** Identify current session
Uses an md5 hash to identify the current session, based on command-line-args.
This variable is used in workgroups, desktop.el and others to identify the current session.
   #+begin_src emacs-lisp
     (setq session-state-id 
	   (secure-hash 'md5 
			(apply 'concat 
			       (list
				session-state-cli 
				session-state-rjh-config-env))))
     (message "Session-state-id: %s" session-state-id)
   #+end_src

** Set saved session-state directory
   #+begin_src emacs-lisp
     (setq session-state-dir "~/.emacs.d/.session-state/")
   #+end_src
** Generate session state file location based on mode name
   #+begin_src emacs-lisp
     (defun session-state-save-path (mode)
       "Returns location of session-state save path for current session mode name"
       (concat session-state-dir "/" session-state-id "/" mode))
   #+end_src
** Ensure session-state directory exists
   #+begin_src emacs-lisp
     (make-directory (session-state-save-path "") t)
   #+end_src
** Write command line arguments to file
   #+begin_src emacs-lisp
 (write-region session-state-cli nil (session-state-save-path "cmdline"))
   #+end_src
