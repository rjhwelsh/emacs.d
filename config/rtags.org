#+TITLE: Rtags IDE for C, C++ and Objective-C
#+AUTHOR: Roger J. H. Welsh
#+EMAIL: rjhwelsh@gmail.com
* About
This configuration package provides packages for Emacs to perform as an IDE for
C-style languages.

This configuration is based off [[http://martinsosic.com/development/emacs/2017/12/09/emacs-cpp-ide.html][Martin Sosic's work]].

Some notes.
Irony is faster, and rtags is more feature-complete.
* Dependencies
See https://github.com/Andersbakken/rtags#tldr-quickstart for details.
** The rtags binaries
 Build the rtags binaries. The following configuration for =Rtags= will make
 them available to emacs.
 #+BEGIN_EXAMPLE bash
 git clone --recursive https://github.com/Andersbakken/rtags.git ~/.emacs.d/rtags
 cd ~/.emacs.d/rtags
 mkdir -vp build
 cd build
 cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 ..
 make
 #+END_EXAMPLE

* Rtags
https://github.com/Andersbakken/rtags
http://www.rtags.net
RTags is a client/server application that indexes C/C++ code and keeps a
persistent file-based database of references, declarations, definitions,
symbolnames etc.

#+BEGIN_SRC emacs-lisp
	(use-package rtags
		:ensure t
		:config
		(progn
		  (setq rtags-path "~/.emacs.d/rtags/build/bin")
			(unless (rtags-executable-find "rc") (error "Binary rc is not installed!"))
			(unless (rtags-executable-find "rdm") (error "Binary rdm is not installed!"))

			(define-key c-mode-base-map (kbd "M-.") 'rtags-find-symbol-at-point)
			(define-key c-mode-base-map (kbd "M-,") 'rtags-find-references-at-point)
			(define-key c-mode-base-map (kbd "M-?") 'rtags-display-summary)
			(rtags-enable-standard-keybindings)

			(setq rtags-use-helm t)

			;; Shutdown rdm when leaving emacs.
			(add-hook 'kill-emacs-hook 'rtags-quit-rdm)
			(add-hook 'c-mode-hook 'rtags-start-process-unless-running)
			(add-hook 'c++-mode-hook 'rtags-start-process-unless-running)
			(add-hook 'objc-mode-hook 'rtags-start-process-unless-running)
			)
		)

#+END_SRC

#+BEGIN_SRC emacs-lisp

	;; TODO: Has no coloring! How can I get coloring?
	(use-package helm-rtags
		:requires helm rtags
		:ensure t
		:config
		(progn
			(setq rtags-display-result-backend 'helm)
			))
#+END_SRC
#+BEGIN_SRC emacs-lisp

	;; Use rtags for auto-completion.
	(use-package company-rtags
		:requires company rtags
	  :ensure t
		:config
		(progn
			(setq rtags-autostart-diagnostics t)
			(rtags-diagnostics)
			(setq rtags-completions-enabled t)
			(push 'company-rtags company-backends)
			))
#+END_SRC


#+BEGIN_SRC emacs-lisp

	;; Live code checking.
	(use-package flycheck-rtags
		:requires flycheck rtags
	  :ensure t
		:config
		(progn
			;; ensure that we use only rtags checking
			;; https://github.com/Andersbakken/rtags#optional-1
			(defun setup-flycheck-rtags ()
				(flycheck-select-checker 'rtags)
				(setq-local flycheck-highlighting-mode nil) ;; RTags creates more accurate overlays.
				(setq-local flycheck-check-syntax-automatically nil)
				(rtags-set-periodic-reparse-timeout 2.0)  ;; Run flycheck 2 seconds after being idle.
				)
			(add-hook 'c-mode-hook #'setup-flycheck-rtags)
			(add-hook 'c++-mode-hook #'setup-flycheck-rtags)
			))

#+END_SRC
