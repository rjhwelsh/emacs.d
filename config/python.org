#+TITLE: Python setup for emacs
#+AUTHOR: Roger J. H. Welsh
#+EMAIL: rjhwelsh@gmail.com


* About
This configuration module uses elpy and other packages for an easy to use python
development environment.
For python best practices, try [[http://docs.python-guide.org/en/latest/][here]].

* Dependencies
To install the requirements of elpy, run one of the following; and/or equivalent
for your system.
#+BEGIN_EXAMPLE sh
pip install jedi flake8 autopep8
emerge -av dev-python/jedi dev-python/flake8 dev-python/autopep8
#+END_EXAMPLE


* Elpy
[[https://elpy.readthedocs.io/en/latest/index.html][Elpy - read the docs]].

The Emacs Python Development Environment. This is a full featured environment
for python development. For introspection and analysis of Python sources, Elpy
mainly relies on Jedi. Jedi is known to have some problems coping with
badly-formatted Python.

#+BEGIN_SRC emacs-lisp
		(use-package "elpy" :ensure t )
    (elpy-enable)
#+END_SRC

* Jedi
[[http://jedi.readthedocs.io/en/latest/][Jedi - read the docs]].

I use company-mode, so the specific implementation of jedi I use is [[https://github.com/syohex/emacs-company-jedi][company-jedi]].
#+BEGIN_SRC emacs-lisp
    (use-package "company-jedi" :ensure t)
#+END_SRC

Add a hook for company-jedi to python-mode.
#+BEGIN_SRC emacs-lisp
  (defun rjh/python-mode-hook ()
  (add-to-list 'company-backends 'company-jedi))

(add-hook 'python-mode-hook 'rjh/python-mode-hook)
#+END_SRC

* Autopep8
	Autopep8 is a code linter for tidying up code to python pep8 standards.
The following is a set of functions, (that may already be implemented in elpy),
for using autopep8 to lint your code before saving.

#+BEGIN_SRC emacs-lisp
(defcustom python-autopep8-path (executable-find "autopep8")
  "autopep8 executable path."
  :group 'python
  :type 'string)

(defun python-autopep8 ()
  "Automatically formats Python code to conform to the PEP 8 style guide.
$ autopep8 --in-place --aggressive <filename>"
  (interactive)
  (when (eq major-mode 'python-mode)
    (shell-command
     (format "%s --in-place --aggressive %s" python-autopep8-path
             (shell-quote-argument (buffer-file-name))))
    (revert-buffer t t t)))

(define-key python-mode-map (kbd "C-c C-a") 'python-autopep8)
#+END_SRC

This segment enables automatic code linting before saving.
Though I prefer to lint manually, so this is just an example.
#+BEGIN_EXAMPLE emacs-lisp
(eval-after-load 'python
  '(if python-autopep8-path
       (add-hook 'before-save-hook 'python-autopep8)))

#+END_EXAMPLE
