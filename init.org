#+AUTHOR: Roger J. H. Welsh
#+EMAIL: rjhwelsh@gmail.com
#+PROPERTY: header-args    :results silent
#+STARTUP: content

* Init.el
 The following are commented out (example) snippets from the =init.el= file.
** Package archives
 The package library is required for package management.
 #+BEGIN_EXAMPLE emacs-lisp
	(require 'package)
 #+END_EXAMPLE

 Disable automatic package loading.
 #+BEGIN_EXAMPLE emacs-lisp
	(setq package-enable-at-startup nil)
	(package-initialize)
 #+END_EXAMPLE

 This code provides a source list of package archives, from which to install packages.
 #+BEGIN_EXAMPLE emacs-lisp
	(add-to-list 'package-archives '("org" . "http://orgmode.org/elpa/"))
	(add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/"))
	(add-to-list 'package-archives '("melpa-stable" . "http://stable.melpa.org/packages/"))
 #+END_EXAMPLE

 Refresh the last view of the elisp archives.
#+BEGIN_EXAMPLE emacs-lisp
 (unless package-archive-contents
	 (package-refresh-contents))
(setq package-load-list '(all))
#+END_EXAMPLE

** Org-plus-contrib
Load the latest org-plus-contrib.
This should be done before evaluating any conf.org files in this repo.
 #+begin_EXAMPLE emacs-lisp
(unless (package-installed-p 'org-plus-contrib)
  (package-install 'org-plus-contrib))
(require 'org)
 #+end_EXAMPLE

** Use-package
 Use-package is a special set of macros to automatically install and
 load packages from the init.el file, this needs to be
 "bootstrapped" before we can use it.
 #+BEGIN_EXAMPLE emacs-lisp
 (unless (package-installed-p 'use-package)
   (package-refresh-contents)
   (package-install 'use-package))
 (eval-when-compile
   (require 'use-package))
 (require 'bind-key)
 #+END_EXAMPLE

** Follow symlinks
 This ensures emacs always follows symlinks to the version-controlled source.
 #+BEGIN_EXAMPLE emacs-lisp
 (require 'vc)
 (setq vc-follow-symlinks t)
 #+END_EXAMPLE

** rjh repository bootstrap
Loads =rjh.el=; if the =repo= does not exist, ask for the location.
   #+begin_src emacs-lisp
(let* ((repo "~/.emacs.d/rjh")
       ;; Prompt if directory does not exist
       (repo (if (file-exists-p repo)
		 repo
	       (read-directory-name "Set location of rjhwelsh/emacs.d repo:")
	       ))
       )
  ;; Load rjh.el  
  (load (expand-file-name "rjh.el" repo))
  )
   #+end_src

** customization file
Loads customization from file, and sets that file for subsequent customization.
This keeps =init.el= tidy.

#+begin_src emacs-lisp
(setq custom-file "~/.emacs.d/custom.el")
(if (file-exists-p custom-file)
    (load custom-file))
#+end_src

** Load configuration segments
Load configuration segments according to:
    - environmental variables
    - customization variables

    #+begin_src emacs-lisp
(rjh/load-env)
(rjh/load-custom)
    #+end_src

